version 2.0.3
-------------
Source code updated to reflect transfer of copyright from Noble Research
Institute, LLC to Anand Seethepalli and Larry York.

Updated license to GNU GPL version 3.

version 2.0.2
-------------
New features:
* Updated cvutil library to use OpenCV 4.1.
* A new function getImageProcessorWindow() is added that creates a main 
  window to load and process images. The window returned by this function 
  has the following features:
  1.  Supports drag & drop of images to load.
  2.  Supports image panning and zooming.
  3.  Allows user to inspect pixel values in five different color spaces
      such as RGB, HSV, HLS, Lab and Luv.
  4.  Supports drawing Region-of-Interest (ROI) rectangles on the image
      to highlight important portions.
  5.  User can query pixel statistics of a loaded image in five different
      color spaces (mentioned above), either on an entire image, or the
      locations specified by ROIs. The statistics include mean and SD of
      the color channels.
  6.  The ROI subsystem supports selecting, moving, resizing and deleting
      multiple ROIs. Deleting the ROIs can be done using the delete key.
      Ctrl+A selects all the ROIs. All the ROIs can be deleted from the 
      menu using Edit->ROI->Clear all ROIs.
  7.  The ROI subsystem also supports exporting and importing the ROIs as
      annotations in a text file.
  8.  The ROI Manager pane to the right of the main Window shows the ROIs
      that are currently present on the image. Selecting an ROI shows its 
      dimensions, which can be edited in the pane.
  9.  The main window supports plugin system. When a plugin is loaded, its
      settings are populated to the left of the main window. Plugins are
      independent modules that implement a specific procedure/method/algorithm
      that can be attached to and configured frim inside the main window.
  10. Main window supports browsing images in the same folder using left 
      and right arrow keys.
  11. Supports "Run analysis" button in the toolbar, that invokes the current 
      plugin loaded to perform analysis on the loaded image.
  12. The main window has a log pane for logging info/warning/error messages
      and a features pane to display any extracted features from the plugin.
      Both the panes are located at the bottom of the main window.
  13. The main window supports color inversion and 90 degree rotation of
      a loaded image.
  14. If the current plugin has multiple outputs, these outputs can be 
      browsed from the toolbar of the main window or by pressing SPACE key.
      SPACE key toggles the image displayed between input image and multiple
      output images.
* Re-implemented OpenCV's imread() and imwrite() to support loading
  images where the file paths are in a different locale. These functions
  require QString from Qt as argument to load/save the images using
  QByteArray, while decoding/encoding the byte sequence is done using
  OpenCV's imdecode()/imencode() functions.
* Implemented another getConnectedComponents() to return label image.
* Implemented stacked barplot functionality.

Fixes:
* cvutil_bwdist.cpp: Supressed compiler warning when using AVX 2.0 
  vector instructions.
* cvutil_bwskel.cpp: Supressed compiler warning when using AVX 2.0 
  vector instructions.
* cvutil_bwskel.cpp: Fixed code to use 32-byte aligned memory when
  using vector variables.
* cvutil_bwskel.cpp: Fixed code to skeletonize a binary image containing
  multiple components.
* cvutil_core.cpp: Set the codec for text input/output as UTF-8 to
  support non-English characters.
* cvutil_core.cpp: Fixed onMouse() event handler for window() function 
  to send messages to logger.
* cvutil_figure.cpp: Fixed barplot functionality from crashing.
* cvutil_linesim.cpp: Fixed code to simplify the contours of a binary 
  image containing multiple components.
* cvutil_matlab_interface.cpp: Fixed code to typecast addresses to 
  unsigned long long.
* The cvutil library now uses Qt's QFile and QDir for platform 
  independent access to filesystem to fix loading/saving of images 
  where the file paths contain non-English characters.

version 1.3
-----------
New features:
* Optimization can be optionally disabled when initializing cvutil
  library.
* Added license information to source code.

Fixes:
* cvutil_core.cpp:getConnectedComponents() - The function is fixed to 
  perform connected components using either 4 or 8 connectivity.
* stdproto.h: Removed unneeded APIs - pthread and pylon references.
* Converted code to use native C++ threading.
* cvutil_bwdist.cpp: The algorithm now creates threads based on the 
  number of logical cores on the system.
* cvutil_bwskel.cpp: Rearranged and added AVX 2.0 optimization code 
  to location::isridge() for faster execution.
* cvutil_bwskel.cpp: Added location::xh8() to count 8-connected 
  components in adjacent pixels (Ref: Guo-Hall Thinning algorithm).
* cvutil_bwskel.cpp:bwskel() Fixed performance bugs where the program 
  took unusually longer time to skeletonize when the images were 
  thresholded at various levels.
* cvutil_core:getLargestConnectedComponent() The function now returns
  an 8-bit pixel size zero matrix with one pixel when no maximum value 
  is found, to prevent crash in functions where an 8-bit matrices are 
  expected.
* cvutil_core.cpp:bwskel() The function is fixed to pass exact precise
  distance transform without rounding.
* cvutil_core.cpp:addBorder() The function is fixed to honor thickness
  argument when adding border pixels to a single channel image.
* cvutil_matlab_interface:FloorCeilFunctions All the functiona in the 
  namespace is modified to check for CPU_AVX2 instead of CPU_AVX for 
  vector processing.
* cvutil_videowriter.h: Fixed include guards and dead web link.
* demo.h: Fixed to use C++ random_device instead of rand() for longer
  periodicity.

version 1.2
-----------
New features:
* Added Macros in stdproto.h to aid in detection of memory leaks
  in the source code.
* Implemented precise euclidean distance transform in cvutil_bwdist.cpp
* Implemented ridge detection on distance transforms in cvutil_bwskel. 
  Also, numerous rules were implemented to generate a connected skeleton 
  for each connected component in the binary image.

Fixes:
* cvutil_matlab_interface.cpp:cvutil::floor() and cvutil::ceil() - Fixed 
  the functions where they return empty matrices when a matrix of double
  precision floating-point values (CV_64F) are passed.

Version 1.1
-----------
New feature:
* Added functionality to create videos from processed images
  using two new classes, DefaultVideoWriter and FrameWriter.

Fixes:
* ind2sub() fixed to correctly generate subscripts when the 
  number of channels is one.
* window() fails when a matrix of different size is passed
  using the same window name that was used earlier.
* bwskel() wrongly creates skeleton due to floating point
  inaccuracies from the distance transform.
* Fixed ForEachFileInPath() to parse the list of image file 
  names in natural sorting.

Version 1.0
-----------
Initial creation.
